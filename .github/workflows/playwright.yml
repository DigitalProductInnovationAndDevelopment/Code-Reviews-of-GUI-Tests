name: GUI Test Review

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      
      - uses: actions/setup-node@v4
        with: { node-version: 18 }
      
      - uses: reviewdog/action-setup@v1
        with: { reviewdog_version: latest }
      
      - name: Install NPM dependencies
        run: npm install
      
      - name: Lint, Prettier & ESLint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/lint.js
        continue-on-error: true

      - name: debug reviewdog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/debug-reviewdog.js

      - name: Playwright tests
        run: node scripts/playwright-test.js
      
      - name: Generate flow-chart
        run: node scripts/generate-flowchart.js
      
      - name: Build checklist
        run: node scripts/checklist.js
      
      - name: Build static HTML report
        run: node scripts/generate-webpage.js
      
      - name: Create test-summary badge
        run: |
          jq -r '"Total: \(.total) | Passed: \(.passed) | Failed: \(.failed) | Skipped: \(.skipped)"' \
            artifacts/playwright-summary.json > artifacts/test-summary.txt
      
      - uses: actions/upload-artifact@v4
        with:
          name: gui-artifacts
          path: artifacts/*
  
  deploy-report:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    
    steps:
      - uses: actions/download-artifact@v4
        with: { name: gui-artifacts, path: gui-artifacts }
      
      - uses: actions/upload-pages-artifact@v3
        with: { path: gui-artifacts/web-report }
      
      - id: deploy
        uses: actions/deploy-pages@v4
  
  comment_link:
    if: github.event_name == 'pull_request'
    needs: deploy-report
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with: { node-version: 18 }
      
      - name: Install JS dependencies (Octokit, marked, etc.)
        run: npm install
      
      - uses: actions/download-artifact@v4
        with:
          name: gui-artifacts
          path: gui-artifacts
      
      - name: Post / update GUI-test summary comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTS_DIR: gui-artifacts
          WEB_REPORT_URL: https://digitalproductinnovationanddevelopment.github.io/Code-Reviews-of-GUI-Tests/index.html
        run: node scripts/summary-comment.js
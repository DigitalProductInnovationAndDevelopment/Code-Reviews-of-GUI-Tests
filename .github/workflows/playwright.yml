name: GUI Test Review Simple

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  gui-test-and-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright
        run: npx playwright install --with-deps
      
      - name: Setup reviewdog
        if: github.event_name == 'pull_request'
        uses: reviewdog/action-setup@v1
      
      # Run all tests and linting
      - name: Run tests and linting
        env:
          ARTIFACTS_DIR: artifacts
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üß™ Running Playwright tests..."
          node scripts/playwright-test.js || true
          
          echo "üîç Running linting..."
          node scripts/lint.js || true
          
          echo "üìä Generating flowchart..."
          node scripts/generate-flowchart.js || true
          
          echo "üìã Generating checklist..."
          node scripts/checklist.js || true
          
          echo "üé® Generating dashboard..."
          node scripts/generate-webpage.js || true
      
      # Deploy to GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: artifacts/web-report
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      # Post PR comment
      - name: Post PR comment
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTS_DIR: artifacts
          WEB_REPORT_URL: ${{ steps.deployment.outputs.page_url }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "üí¨ Posting PR comment..."
          echo "Dashboard URL: ${WEB_REPORT_URL}"
          
          # If no deployment URL, use expected pattern
          if [[ -z "${WEB_REPORT_URL}" ]]; then
            export WEB_REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
            echo "Using expected URL: ${WEB_REPORT_URL}"
          fi
          
          node scripts/summary-comment.js
      
      # Upload artifacts for debugging
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gui-test-artifacts
          path: artifacts/
          retention-days: 7
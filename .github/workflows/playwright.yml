name: GUI Test Review

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write          # needed for the Prettier action

    steps:
      # ───── basic setup ─────
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: 18 }

      - name: Install NPM dependencies
        run: npm install


# ───── LINT & INLINE COMMENTS ─────
      - name: Collect changed files
        id: diff
        run: |
          echo "changed=$(git diff --name-only --diff-filter=AM $(git merge-base origin/main HEAD) -- tests | tr '\n' ' ')" >> "$GITHUB_OUTPUT"

      - name: Install TypeScript ESLint deps
        run: npm install --no-save eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin

      # --- Prettier annotations ---
      - name: Prettier (reviewdog)
        continue-on-error: true          # ← keep the job green
        uses: EPMatt/reviewdog-action-prettier@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prettier_flags: ${{ steps.diff.outputs.changed }}
          reporter: github-pr-check
          filter_mode: added
          level: warning                 # annotations are still warnings

      # --- ESLint annotations ---
      - name: ESLint (reviewdog)
        continue-on-error: true          # ← keep the job green
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          eslint_flags: ${{ steps.diff.outputs.changed }}
          reporter: github-pr-check
          filter_mode: added
          level: warning


      - name: Lint, Prettier & ESLint summary
        run: node scripts/lint.js
        continue-on-error: true

      - name: Playwright tests
        run: node scripts/playwright-test.js
        continue-on-error: true

      - name: Generate flow-chart
        run: node scripts/generate-flowchart.js
        continue-on-error: true

      - name: Build checklist
        run: node scripts/checklist.js
        continue-on-error: true

      - name: Build static HTML report
        run: node scripts/generate-webpage.js
        continue-on-error: true

      - name: Create test-summary badge
        run: |
          if [ -f "artifacts/playwright-summary.json" ]; then
            jq -r '"Total: \(.total) | Passed: \(.passed) | Failed: \(.failed) | Skipped: \(.skipped)"' \
              artifacts/playwright-summary.json > artifacts/test-summary.txt
          else
            echo "No playwright-summary.json file found. Creating empty summary."
            echo "Total: 0 | Passed: 0 | Failed: 0 | Skipped: 0" > artifacts/test-summary.txt
          fi
        continue-on-error: true

      - uses: actions/upload-artifact@v4
        with:
          name: gui-artifacts
          path: artifacts/*
        continue-on-error: true

  # ── remaining deploy & comment jobs (unchanged) ──
  deploy-report:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - uses: actions/download-artifact@v4
        with: { name: gui-artifacts, path: gui-artifacts }
        continue-on-error: true

      - uses: actions/upload-pages-artifact@v3
        with: { path: gui-artifacts/web-report }
        continue-on-error: true

      - id: deploy
        uses: actions/deploy-pages@v4
        continue-on-error: true

  comment_link:
    if: github.event_name == 'pull_request'
    needs: deploy-report
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 18 }

      - name: Install JS deps (Octokit, marked, …)
        run: npm install

      - uses: actions/download-artifact@v4
        with:
          name: gui-artifacts
          path: gui-artifacts

      - name: Post / update GUI-test summary comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTS_DIR: gui-artifacts
          WEB_REPORT_URL: https://digitalproductinnovationanddevelopment.github.io/Code-Reviews-of-GUI-Tests/index.html
        run: node scripts/summary-comment.js

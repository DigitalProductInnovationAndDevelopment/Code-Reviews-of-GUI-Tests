# .github/workflows/gui-test-review.yml
name: GUI Test Review

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

####################################################################
# 1) Build, lint, test and create artefacts                        #
####################################################################
jobs:
  review-assistant:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Install NPM dependencies
        run: npm install

      # Linting, formatting, ESLint metrics
      - name: Lint, Prettier & ESLint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/lint.js

      # Playwright test run
      - name: Playwright tests
        run: node scripts/playwright-test.js

      # Flow-chart PNG & HTML dashboard
      - name: Generate flow-chart
        run: node scripts/generate-flowchart.js

      - name: Build checklist
        run: node scripts/checklist.js

      - name: Build static HTML report
        run: node scripts/generate-webpage.js

      # Collect everything
      - uses: actions/upload-artifact@v4
        with:
          name: gui-artifacts
          path: artifacts/

####################################################################
# 2) Publish the HTML dashboard via GitHub Pages                   #
####################################################################
  deploy-report:
    needs: review-assistant
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write         

    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}

    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v4
        with:
          name: gui-artifacts
          path: gui-artifacts

      - name: Upload Pages artefact
        uses: actions/upload-pages-artifact@v3
        with:
          path: gui-artifacts/web-report   

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

####################################################################
# 3) Sticky PR comment with comment-identifier                     #
####################################################################
  comment_link:
    if: github.event_name == 'pull_request'
    needs: deploy-report
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
      - name: Checkout (required by the action)
        uses: actions/checkout@v4

      - name: Post / update link to HTML dashboard
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          edit-mode: replace
          comment-id: gui-test-review
          body: |
            ðŸ‘‹ **Hello!**

            Your GUI-test results are ready:  
            **[ðŸ“Š View the latest dashboard â†—](https://digitalproductinnovationanddevelopment.github.io/Code-Reviews-of-GUI-Tests/index.html)**

            _This comment is automatically updated on every push._
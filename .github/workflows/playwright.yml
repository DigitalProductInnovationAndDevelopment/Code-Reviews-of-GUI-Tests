name: GUI Test Review

on:
  pull_request:
    branches: [main]
       
jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      # Step 1: Checkout the PR code. fetch-depth: 0 is crucial.
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      
      - uses: actions/setup-node@v4
        with: { node-version: 18 }
      
      - name: Install NPM dependencies
        run: npm install
      
      - uses: reviewdog/action-setup@v1
        with: { reviewdog_version: latest }
      
      - name: Run lint script for reports  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: node scripts/lint.js
        continue-on-error: true
      
      # --- Run tests on the PR branch ---
      - name: Run Playwright tests on PR branch
        run: node scripts/playwright-test.js
        continue-on-error: true
      - run: cp playwright-summary.json artifacts/playwright-summary-pr.json
      
      # --- Archive the report from the PR branch run ---
      - name: Archive PR test report
        run: |
          mkdir -p artifacts/pr-report
          # Move the contents of the report to the pr-report directory
          mv playwright-report/* artifacts/pr-report/ || echo "No PR report found to move."
        continue-on-error: true

      # --- Run tests on the main branch's version of the tests ---
      - name: Run Playwright tests on main branch version
        run: |
          # ### CRITICAL FIX ###
          # Checkout the main branch's version of the TEST FILES and CONFIG.
          # adjust these paths to match the repository structure.
          echo "Checking out test files from 'main' branch..."
          git checkout origin/main -- tests/ playwright.config.js
          
          # Check if the checkout was successful by verifying a key file exists.
          # Adjust 'tests/example.spec.ts' to a real test file in your project.
          # TODO - MAKE THIS FILE CONFIGURABLE BY USER
          if [ ! -f "tests/demo-todo-app.spec.ts" ]; then
            echo "A key test file was not found after checkout from main. Skipping second run."
            # Create an empty directory so the next step doesn't fail
            mkdir -p playwright-report
          else
            echo "Running tests using main branch's test files..."
            # This uses the same node_modules, but runs the older test files
            node scripts/playwright-test.js
          fi
        continue-on-error: true
      - run: cp playwright-summary.json artifacts/playwright-summary-main.json
        
      # --- Archive the report from the main branch run ---
      - name: Archive main branch test report
        run: |
          mkdir -p artifacts/main-report
          # Move the contents of the report to the main-report directory
          mv playwright-report/* artifacts/main-report/ || echo "No main branch report found to move."
        continue-on-error: true

      # --- Restore the PR's version of the files to avoid side-effects ---
      - name: Restore PR version of test files
        run: git checkout HEAD -- tests/ playwright.config.js
      
      # --- The rest of the original steps ---
      - name: Generate flow-chart
        run: node scripts/generate-flowchart.js
        continue-on-error: true
      
      - name: Build checklist
        run: node scripts/checklist.js
        continue-on-error: true
      
      - name: Build static HTML report
        run: node scripts/generate-webpage.js
        continue-on-error: true
      
      - name: Create test-summary file
        shell: bash
        run: |
          # PR branch summary  ──────────────────────────────────────────────
          if [[ -f artifacts/playwright-summary-pr.json ]]; then
            jq -r '"PR   : Total: \(.total) | Passed: \(.passed) | Failed: \(.failed) | Skipped: \(.skipped)"' \
              artifacts/playwright-summary-pr.json \
              > artifacts/test-summary.txt
          else
            echo "PR   : Total: 0 | Passed: 0 | Failed: 0 | Skipped: 0" > artifacts/test-summary.txt
          fi

          # main branch summary ────────────────────────────────────────────
          if [[ -f artifacts/playwright-summary-main.json ]]; then
            jq -r '"Main : Total: \(.total) | Passed: \(.passed) | Failed: \(.failed) | Skipped: \(.skipped)"' \
              artifacts/playwright-summary-main.json \
              >> artifacts/test-summary.txt
          else
            echo "Main : Total: 0 | Passed: 0 | Failed: 0 | Skipped: 0" >> artifacts/test-summary.txt
          fi
        continue-on-error: true

      
      # This will now upload the parent 'artifacts' directory, which contains both reports
      - uses: actions/upload-artifact@v4
        with:
          name: gui-artifacts
          path: artifacts/
        continue-on-error: true
  
  deploy-report:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    
    steps:
      - uses: actions/download-artifact@v4
        with: { name: gui-artifacts, path: gui-artifacts }
        continue-on-error: true
      
      - uses: actions/upload-pages-artifact@v3
        with: { path: gui-artifacts/web-report }
        continue-on-error: true
      
      - id: deploy
        uses: actions/deploy-pages@v4
        continue-on-error: true

      - name: Retry deployment if failed
        if: failure()
        uses: actions/deploy-pages@v4
        continue-on-error: true
        timeout-minutes: 10
  
  comment_link:
    if: github.event_name == 'pull_request'
    needs: deploy-report
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
        continue-on-error: true
      
      - uses: actions/setup-node@v4
        with: { node-version: 18 }
        continue-on-error: true
      
      - name: Install JS dependencies (Octokit, marked, etc.)
        run: npm install
        continue-on-error: true
      
      - uses: actions/download-artifact@v4
        with:
          name: gui-artifacts
          path: gui-artifacts
        continue-on-error: true
      
      - name: Post / update GUI-test summary comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTS_DIR: gui-artifacts
          WEB_REPORT_URL: https://digitalproductinnovationanddevelopment.github.io/Code-Reviews-of-GUI-Tests/index.html
        run: node scripts/summary-comment.js
        continue-on-error: true
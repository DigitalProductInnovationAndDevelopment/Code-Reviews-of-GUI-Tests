name: Split-Module GUI Test Pipeline

on:
  pull_request:
    branches: [main]      # adjust as needed

jobs:
  # ───────────────────────────────────────────────────────────
  # 1. Playwright tests only
  # ───────────────────────────────────────────────────────────
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm ci

      # (You may still prefer the native playwright reporter; here's the full action)
      - uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: test-only                    # ← runs only Playwright
          test-files: 'tests/**/*.spec.{js,ts}'
          # any other Playwright-specific inputs here

      # Upload the files for the dashboard job
      - uses: actions/upload-artifact@v4
        with:
          name: playwright-summary
          path: artifacts/playwright-summary-pr.json
      - uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: artifacts/pr-report/

  # ───────────────────────────────────────────────────────────
  # 2. ESLint / Prettier only
  # ───────────────────────────────────────────────────────────
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm ci

      - uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: lint-only                    # ← only lint

  # ───────────────────────────────────────────────────────────
  # 3. Build dashboard from artifacts
  # ───────────────────────────────────────────────────────────
  dashboard:
    needs: [test, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      pages: write          # needed if you deploy to Pages
      id-token: write

    environment:            # pretty green “github-pages / deployment”
      name: github-pages
      url: ${{ steps.review.outputs.dashboard-url }}

    steps:
      - uses: actions/checkout@v4

      # Pull artifacts created by `test`
      - uses: actions/download-artifact@v4
        with: { name: playwright-summary, path: artifacts }
      - uses: actions/download-artifact@v4
        with: { name: playwright-report,  path: artifacts/pr-report }

      # Build + (optionally) deploy the dashboard
      - name: Dashboard / PR comment
        id: review
        uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: dashboard-only               # ← no lint, no tests
          custom-artifacts-path: artifacts   # ← where we downloaded things
          enable-github-pages: 'true'        
name: Split-Module GUI Test Pipeline

on:
  pull_request:
    branches: [main]

# ───────────────────────────────────────────────────────────────
# 1. Playwright tests     → artefacts (no Pages)
# ───────────────────────────────────────────────────────────────
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: npm
      - run: npm install

      # Playwright only – dashboard & lint disabled here
      - name: GUI Test – Playwright only
        uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.12
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: test-only
          test-files: tests
          enable-dashboard: 'false'
          enable-github-pages: 'false'

      # build playwright-summary AFTER the action moved metrics → artifacts/
      - name: Build playwright-summary-pr.json
        run: |
          node - <<'EOF'
          const fs = require('fs');
          const rpt = JSON.parse(fs.readFileSync('artifacts/playwright-metrics.json','utf8'));
          const out = {
            total:     rpt.stats.tests,
            passed:    rpt.stats.passed,
            failed:    rpt.stats.failed ?? rpt.stats.unexpected ?? 0,
            skipped:   rpt.stats.skipped ?? 0,
            duration:  rpt.stats.duration,
            pass_rate: +((rpt.stats.passed / rpt.stats.tests) * 100).toFixed(2)
          };
          fs.writeFileSync('artifacts/playwright-summary-pr.json', JSON.stringify(out, null, 2));
          EOF

      # upload three artefacts used by dashboard job
      - uses: actions/upload-artifact@v4
        with:
          name: playwright-summary
          path: artifacts/playwright-summary-pr.json

      - uses: actions/upload-artifact@v4
        with:
          name: playwright-metrics
          path: artifacts/playwright-metrics.json

      - uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: artifacts/pr-report/

# ───────────────────────────────────────────────────────────────
# 2. ESLint / Prettier
# ───────────────────────────────────────────────────────────────
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: npm
      - run: npm install

      - name: GUI Test – Lint only
        uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.12
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: lint-only

      # upload lint-summary.json so dashboard can read real numbers
      - name: Upload lint summary
        uses: actions/upload-artifact@v4
        with:
          name: lint-summary
          path: artifacts/lint-summary.json

# ───────────────────────────────────────────────────────────────
# 3. Dashboard / checklist / flow-chart / PR comment / Pages
# ───────────────────────────────────────────────────────────────
  dashboard:
    needs: [test, lint]
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.review.outputs.dashboard-url }}

    steps:
      - uses: actions/checkout@v4

      - name: Install npm if repo has package.json
        run: |
          if [ -f package.json ]; then
            npm ci 2>/dev/null || npm install
          fi

      # download all artefacts produced in previous jobs
      - uses: actions/download-artifact@v4
        with:
          name: playwright-summary
          path: dl
      - uses: actions/download-artifact@v4
        with:
          name: playwright-metrics
          path: dl
      - uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: dl/pr-report
      - uses: actions/download-artifact@v4
        with:
          name: lint-summary
          path: dl

      # build dashboard, flow-chart, checklist, PR comment, deploy Pages
      - id: review
        name: Build dashboard & deploy
        uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.12
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: dashboard-only
          custom-artifacts-path: dl
          enable-github-pages: 'true'

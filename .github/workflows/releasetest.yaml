name: Split-Module GUI Test Pipeline

on:
  pull_request:
    branches: [main]          # adjust to your default branch

jobs:
# ───────────────────────────────────────────────────────────────
# 1. Playwright tests only  (Action builds artifacts, no Pages)
# ───────────────────────────────────────────────────────────────
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: npm
      - run: npm install

      - name: GUI Test – Playwright only
        uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: test-only

          # 👇 turn on artifact packaging, but skip Pages deploy
          enable-dashboard: 'true'
          enable-github-pages: 'false'

          test-files: 'tests/**/*.spec.{js,ts}'
          # (add other Playwright-specific inputs as needed)

# ───────────────────────────────────────────────────────────────
# 2. ESLint / Prettier only
# ───────────────────────────────────────────────────────────────
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          cache: npm
      - run: npm install

      - name: GUI Test – Lint only
        uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: lint-only

# ───────────────────────────────────────────────────────────────
# 3. Build dashboard from artifacts produced in `test`
# ───────────────────────────────────────────────────────────────
  dashboard:
    needs: [test, lint]       # wait for both jobs
    runs-on: ubuntu-latest

    permissions:              # required for PR comment & Pages deploy
      contents: read
      pull-requests: write
      pages: write
      id-token: write

    environment:              # gives the nice green “github-pages / deployment” check
      name: github-pages
      url: ${{ steps.review.outputs.dashboard-url }}

    steps:
      - uses: actions/checkout@v4

      # ⬇️ Download the single artifact package created by the test job
      - name: Download GUI artifacts
        uses: actions/download-artifact@v4
        with:
          name: gui-test-visual-artifacts
          path: artifacts         # will be artifacts/web-report/, artifacts/pr-report/, etc.

      # ⬇️ Build the dashboard (and deploy to Pages)
      - name: Dashboard / PR comment
        id: review
        uses: DigitalProductInnovationAndDevelopment/Code-Reviews-of-GUI-Tests@v1.0.9
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          mode: dashboard-only
          custom-artifacts-path: artifacts
          enable-github-pages: 'true'   # set to 'false' to skip deployment
